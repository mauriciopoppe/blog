const path = require('path')
const { execSync } = require('child_process')
const { runCli } = require('bulma-css-vars/dist/cli.js')

// touchDummySassFiles creates dummy files in /src/main/sass/bulma-generated
// so that bulma-css-vars is unblocked
async function touchDummySassFiles(theme) {
  const dummyFile = path.join(__dirname, `../main/sass/bulma-generated/generated-bulma-vars-${theme}.sass`)
  execSync(`mkdir -p $(dirname ${dummyFile}) && touch ${dummyFile}`)
}

async function generateTheme(theme) {
  const outPath = path.join(__dirname, '../main/sass/bulma-generated')
  const themePath = path.join(__dirname, `../main/theme-${theme}/`)

  // runs bulma-css-vars with a custom directory (the theme directory)
  await runCli(themePath)
  // eslint-disable-next-line
  execSync(`sed -i 's/window/global/g' bulma-colors.js`, { cwd: outPath })
  execSync(`sed -i 's/#{":root"}/html[data-theme=${theme}]/g' generated-bulma-vars-${theme}.sass`, { cwd: outPath })
}

async function main() {
  // The theme files are referenced from the main.scss file
  // however they don't exist so bulma-css-vars fails.
  //
  // As a workaround I create dummy files with no content,
  // they'll be generated by bulma-css-vars later.
  await touchDummySassFiles('dark')
  await touchDummySassFiles('light')

  await generateTheme('dark')
  await generateTheme('light')
}

main()
